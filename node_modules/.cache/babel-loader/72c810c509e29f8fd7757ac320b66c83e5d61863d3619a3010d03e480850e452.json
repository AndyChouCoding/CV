{"ast":null,"code":"var _jsxFileName = \"/Users/fulishijin/Documents/side/CV/src/pages/swiss knife/pages/weather/index.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst KEY_NUMBER = \"https://opendata.cwb.gov.tw/api/v1/rest/datastore/O-A0001-001?Authorization=CWB-16064478-3445-479D-AF14-B7C6AC2FC15A\";\nconst KEY_NUMBER_RAIN = \"https://opendata.cwb.gov.tw/api/v1/rest/datastore/F-D0047-069?Authorization=CWB-16064478-3445-479D-AF14-B7C6AC2FC15A&format=JSON\";\nconst Weather = () => {\n  _s();\n  const [currentWeather, setCurrentWeather] = useState();\n  const fetchWeatherData = () => {\n    return fetch(KEY_NUMBER).then(res => res.json()).then(data => {\n      const LOCALDATA = data.records.location[164];\n      const weatherElements = LOCALDATA.weatherElement.reduce((neededElements, item) => {\n        if ([\"WDSD\", \"TEMP\", \"HUMD\"].includes(item.elementName)) {\n          neededElements[item.elementName] = item.elementValue;\n        }\n        return neededElements;\n      }, {});\n      return {\n        observationTime: LOCALDATA.time.obsTime,\n        locationName: LOCALDATA.locationName,\n        temperature: weatherElements.TEMP,\n        windSpeed: weatherElements.WDSD\n      };\n    });\n  };\n  const fetchWeatherRain = () => {\n    return fetch(KEY_NUMBER_RAIN).then(res => res.json()).then(data => {\n      const RAINDATA = data.records.locations[0].location[22].weatherElement[0].time[3].elementValue[0].value;\n      return {\n        rain: RAINDATA\n      };\n    });\n  };\n  useEffect(() => {\n    Promise.all([fetchWeatherData(), fetchWeatherRain()]).then(results => {\n      const [weatherData, rainData] = results;\n      setCurrentWeather({\n        ...weatherData,\n        ...rainData\n      });\n    });\n  }, []);\n  if (!currentWeather) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-[300px] bg-slate-300 shadow-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: new Intl.DateTimeFormat(\"zh-TW\", {\n          month: \"short\",\n          day: \"numeric\",\n          hour: \"numeric\",\n          minute: \"numeric\"\n        }).format(new Date(currentWeather.observationTime))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: currentWeather.locationName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"\\u76EE\\u524D\\u6EAB\\u5EA6\", currentWeather.temperature, \"\\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"\\u98A8\\u901F\", currentWeather.windSpeed, \" m/h\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"\\u964D\\u96E8\\u6A5F\\u7387\", currentWeather.rain, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => Promise.all([fetchWeatherData(), fetchWeatherRain()]).then(results => {\n            const [weatherData, rainData] = results;\n            setCurrentWeather({\n              ...weatherData,\n              ...rainData\n            });\n          }),\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Weather, \"sxY98Q5P4oLKZ1gFwHCr2Hg5oYY=\");\n_c = Weather;\nexport default Weather;\nvar _c;\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","KEY_NUMBER","KEY_NUMBER_RAIN","Weather","_s","currentWeather","setCurrentWeather","fetchWeatherData","fetch","then","res","json","data","LOCALDATA","records","location","weatherElements","weatherElement","reduce","neededElements","item","includes","elementName","elementValue","observationTime","time","obsTime","locationName","temperature","TEMP","windSpeed","WDSD","fetchWeatherRain","RAINDATA","locations","value","rain","Promise","all","results","weatherData","rainData","children","fileName","_jsxFileName","lineNumber","columnNumber","className","Intl","DateTimeFormat","month","day","hour","minute","format","Date","onClick","_c","$RefreshReg$"],"sources":["/Users/fulishijin/Documents/side/CV/src/pages/swiss knife/pages/weather/index.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nconst KEY_NUMBER =\r\n  \"https://opendata.cwb.gov.tw/api/v1/rest/datastore/O-A0001-001?Authorization=CWB-16064478-3445-479D-AF14-B7C6AC2FC15A\";\r\nconst KEY_NUMBER_RAIN =\r\n  \"https://opendata.cwb.gov.tw/api/v1/rest/datastore/F-D0047-069?Authorization=CWB-16064478-3445-479D-AF14-B7C6AC2FC15A&format=JSON\";\r\n\r\nconst Weather = () => {\r\n  const [currentWeather, setCurrentWeather] = useState<any>();\r\n\r\n  const fetchWeatherData = () => {\r\n    return fetch(KEY_NUMBER)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        const LOCALDATA = data.records.location[164];\r\n        const weatherElements = LOCALDATA.weatherElement.reduce(\r\n          (neededElements: any, item: any) => {\r\n            if ([\"WDSD\", \"TEMP\", \"HUMD\"].includes(item.elementName)) {\r\n              neededElements[item.elementName] = item.elementValue;\r\n            }\r\n            return neededElements;\r\n          },\r\n          {}\r\n        );\r\n        return {\r\n          observationTime: LOCALDATA.time.obsTime,\r\n          locationName: LOCALDATA.locationName,\r\n          temperature: weatherElements.TEMP,\r\n          windSpeed: weatherElements.WDSD,\r\n        };\r\n      });\r\n  };\r\n\r\n  const fetchWeatherRain = () => {\r\n    return fetch(KEY_NUMBER_RAIN)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        const RAINDATA = data.records.locations[0].location[22].weatherElement[0].time[3].elementValue[0].value;\r\n        return { rain: RAINDATA };\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    Promise.all([fetchWeatherData(), fetchWeatherRain()]).then((results) => {\r\n      const [weatherData, rainData] = results;\r\n      setCurrentWeather({ ...weatherData, ...rainData });\r\n    });\r\n  }, []);\r\n\r\n  if (!currentWeather) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"w-[300px] bg-slate-300 shadow-lg\">\r\n        <div>\r\n          {new Intl.DateTimeFormat(\"zh-TW\", {\r\n            month: \"short\",\r\n            day: \"numeric\",\r\n            hour: \"numeric\",\r\n            minute: \"numeric\",\r\n          }).format(new Date(currentWeather.observationTime))}\r\n        </div>\r\n        <div>{currentWeather.locationName}</div>\r\n        <div>目前溫度\r\n          {currentWeather.temperature}\r\n          °C\r\n        </div>\r\n        <div>風速{currentWeather.windSpeed} m/h</div>\r\n        <div>降雨機率{currentWeather.rain}%</div>\r\n        <div>\r\n          <button onClick={() => Promise.all([fetchWeatherData(), fetchWeatherRain()]).then((results) => {\r\n            const [weatherData, rainData] = results;\r\n            setCurrentWeather({ ...weatherData, ...rainData });\r\n          })}>Reset</button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Weather;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}